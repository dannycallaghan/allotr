import { useState } from "react";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "../utils/api";

interface IFormData {
  title: string,
  description: string,
}

const Home: NextPage = () => {
  const utils = api.useContext();
  const createNewList = api.list.createList.useMutation();
  const [list, setList] = useState<IFormData>({
    title: "",
    description: "",
  });
  const { data } = api.list.getAllLists.useQuery();

  const handleSubmit = (e) => {
    e.preventDefault();
    createNewList.mutate({ ...list });
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <form onSubmit={handleSubmit}>
              <input
                type="text"
                placeholder="Title"
                value={list.title}
                onChange={(e) => setList((prevData:IFormData) => ({
                  ...prevData,
                  title: e.target.value
                }))}
              />
              <input
                type="text"
                placeholder="Description"
                value={list.description}
                onChange={(e) => setList((prevData:IFormData) => ({
                  ...prevData,
                  description: e.target.value
                }))}
              />
              <button type="submit">Create</button>
            </form>
          </div>
          <div className="flex flex-col items-center gap-2">
            {!data && (
              <p className="text-2xl text-white">
                Loading...
              </p>
            )}
            {data && (
              <p className="text-2xl text-yellow-800">
                {data.map(user => (
                  <span key={user.id}>
                    <span>{user.name}</span><br />
                  </span>
                ))}
              </p>
            )}
          </div>
          <div className="flex flex-col items-center gap-2">
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
        <pre>{JSON.stringify(sessionData, null, 2)}</pre>
      </button>
    </div>
  );
};
